{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ties","text":"<p>A powerful CLI tool to duplicate and sync file content with advanced transformations. Keep your repository files in sync automatically with intelligent content synchronization.</p>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"#installation","title":"Installation","text":"<pre><code># Install from PyPI\npip install ties\n\n# Or install with YAML support\npip install ties[yaml]\n\n# Or install from source\ngit clone https://github.com/AlonKellner/ties.git\ncd ties\npip install -e .\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<ol> <li> <p>Create a configuration in your <code>pyproject.toml</code>:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"gitignore sync\"\nsource = \".gitignore\"\ntarget = \"examples/.gitignore\"\n</code></pre> </li> <li> <p>Check for discrepancies:</p> <pre><code>ties check\n</code></pre> </li> <li> <p>Fix discrepancies automatically:</p> <pre><code>ties fix\n</code></pre> </li> </ol>"},{"location":"#advanced-docs","title":"\ud83d\udcd6 Advanced docs","text":"<ul> <li>User Guide - Complete usage instructions</li> <li>Examples - Common use cases and examples</li> </ul>"},{"location":"examples/","title":"Ties Examples","text":"<p>This page provides practical examples of how to use Ties in various scenarios.</p>"},{"location":"examples/#basic-examples","title":"\ud83d\ude80 Basic Examples","text":""},{"location":"examples/#example-1-simple-file-sync","title":"Example 1: Simple File Sync","text":"<p>Keep a file synchronized between two locations:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Simple Sync\"\nsource = \"README.md\"\ntarget = \"docs/README.md\"\n</code></pre>"},{"location":"examples/#example-2-multiple-target-files","title":"Example 2: Multiple Target Files","text":"<p>Sync one source file to multiple target locations:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Multi-Target Sync\"\nsource = \".gitignore\"\ntargets = [\n    \"examples/.gitignore\",\n    \"docs/.gitignore\",\n    \"tests/.gitignore\"\n]\n</code></pre>"},{"location":"examples/#example-3-directory-structure-sync","title":"Example 3: Directory Structure Sync","text":"<p>Sync files while maintaining directory structure:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Config Sync\"\nsource = \"config/default.toml\"\ntargets = [\n    \"config/development.toml\",\n    \"config/staging.toml\",\n    \"config/production.toml\"\n]\n</code></pre>"},{"location":"examples/#advanced-examples","title":"\ud83d\udd27 Advanced Examples","text":""},{"location":"examples/#example-4-environment-variable-embedding","title":"Example 4: Environment Variable Embedding","text":"<p>Create environment-specific configuration files:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Environment Configs\"\nsource = \".env.template\"\ntargets = [\".env.dev\", \".env.prod\"]\ntransform = \"ties:embed_environ\"\n</code></pre> <p>Template file (<code>.env.template</code>):</p> <pre><code># Database Configuration\nDB_HOST=${env:DB_HOST}\nDB_PORT=${env:DB_PORT}\nDB_NAME=${env:DB_NAME}\n\n# API Configuration\nAPI_KEY=${env:API_KEY}\nAPI_URL=${env:API_URL}\n</code></pre>"},{"location":"examples/#example-5-documentation-synchronization","title":"Example 5: Documentation Synchronization","text":"<p>Keep documentation in sync across multiple locations:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Documentation Sync\"\nsource = \"README.md\"\ntargets = [\n    \"docs/README.md\",\n    \"examples/README.md\"\n]\n</code></pre>"},{"location":"examples/#example-6-configuration-file-management","title":"Example 6: Configuration File Management","text":"<p>Manage multiple configuration files with different transformations:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Git Ignore to Trivy\"\nsource = \".gitignore\"\ntarget = \"trivy.yaml\"\ntransform = \"transform:trivy_yaml\"\n\n[[tool.ties.tie]]\nname = \"MCP Configuration\"\nsource = \".ties/mcp.json\"\ntargets = [\n    \".mcp.json\",\n    \".cursor/mcp.json\",\n    \".vscode/mcp.json\"\n]\ntransform = \"ties:embed_environ\"\n</code></pre> <p>Note: The <code>transform:trivy_yaml</code> and <code>transform:vscode_mcp_json</code> transforms require a local <code>transform.py</code> file in your <code>.ties/</code> directory.</p>"},{"location":"examples/#real-world-scenarios","title":"\ud83c\udfd7\ufe0f Real-World Scenarios","text":""},{"location":"examples/#scenario-1-multi-environment-application","title":"Scenario 1: Multi-Environment Application","text":"<p>Keep configuration files synchronized across development, staging, and production environments:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"App Config Sync\"\nsource = \"config/app.toml\"\ntargets = [\n    \"config/dev/app.toml\",\n    \"config/staging/app.toml\",\n    \"config/prod/app.toml\"\n]\n\n[[tool.ties.tie]]\nname = \"Environment Variables\"\nsource = \"config/env.template\"\ntargets = [\n    \"config/dev/.env\",\n    \"config/staging/.env\",\n    \"config/prod/.env\"\n]\ntransform = \"ties:embed_environ\"\n</code></pre>"},{"location":"examples/#scenario-2-documentation-project","title":"Scenario 2: Documentation Project","text":"<p>Maintain consistent documentation across multiple formats and locations:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Main README\"\nsource = \"README.md\"\ntargets = [\n    \"docs/README.md\",\n    \"examples/README.md\",\n    \"CONTRIBUTING.md\"\n]\n\n[[tool.ties.tie]]\nname = \"License Sync\"\nsource = \"LICENSE\"\ntargets = [\n    \"docs/LICENSE.md\",\n    \"examples/LICENSE\"\n]\n</code></pre>"},{"location":"examples/#scenario-3-development-tools-configuration","title":"Scenario 3: Development Tools Configuration","text":"<p>Keep development tool configurations synchronized:</p> <pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Pre-commit Config\"\nsource = \".pre-commit-config.yaml\"\ntargets = [\n    \"examples/.pre-commit-config.yaml\",\n    \"docs/.pre-commit-config.yaml\"\n]\n\n[[tool.ties.tie]]\nname = \"Editor Config\"\nsource = \".editorconfig\"\ntargets = [\n    \"examples/.editorconfig\",\n    \"docs/.editorconfig\"\n]\n</code></pre>"},{"location":"examples/#workflow-integration-examples","title":"\ud83d\udd04 Workflow Integration Examples","text":""},{"location":"examples/#pre-commit-hook","title":"Pre-commit Hook","text":"<p>Add Ties to your pre-commit configuration:</p> <pre><code>repos:\n  - repo: local\n    hooks:\n      - id: ties-check\n        name: Ties Check\n        entry: ties check\n        language: system\n        types: [python]\n        pass_filenames: false\n</code></pre>"},{"location":"examples/#github-actions","title":"GitHub Actions","text":"<p>Use Ties in your CI/CD pipeline:</p> <pre><code>name: Check File Synchronization\non: [push, pull_request]\n\njobs:\n  sync-check:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Set up Python\n        uses: actions/setup-python@v5\n        with:\n          python-version: '3.10'\n      - name: Install Ties\n        run: pip install ties\n      - name: Check file synchronization\n        run: ties check\n</code></pre>"},{"location":"examples/#local-development","title":"Local Development","text":"<p>Create a development script:</p> <pre><code>#!/bin/bash\n# dev-sync.sh\n\necho \"Checking file synchronization...\"\nif ties check; then\n    echo \"\u2705 All files are in sync\"\nelse\n    echo \"\u274c Files are out of sync\"\n    echo \"Run 'ties fix' to synchronize files\"\n    exit 1\nfi\n</code></pre>"},{"location":"examples/#best-practices","title":"\ud83c\udfaf Best Practices","text":""},{"location":"examples/#1-use-descriptive-names","title":"1. Use Descriptive Names","text":"<pre><code># Good\nname = \"Database Configuration Sync\"\n\n# Avoid\nname = \"sync\"\n</code></pre>"},{"location":"examples/#2-group-related-ties","title":"2. Group Related Ties","text":"<pre><code>[tool.ties]\n# Documentation ties\n[[tool.ties.tie]]\nname = \"README Sync\"\nsource = \"README.md\"\ntarget = \"docs/README.md\"\n\n[[tool.ties.tie]]\nname = \"License Sync\"\nsource = \"LICENSE\"\ntarget = \"docs/LICENSE.md\"\n\n# Configuration ties\n[[tool.ties.tie]]\nname = \"App Config\"\nsource = \"config/app.toml\"\ntargets = [\"config/dev/\", \"config/prod/\"]\n</code></pre>"},{"location":"examples/#3-use-transformations-wisely","title":"3. Use Transformations Wisely","text":"<pre><code># Only use transformations when needed\n[[tool.ties.tie]]\nname = \"Simple Copy\"\nsource = \"file.txt\"\ntarget = \"copy.txt\"\n# No transform needed for simple copying\n\n[[tool.ties.tie]]\nname = \"Environment Config\"\nsource = \".env.template\"\ntarget = \".env\"\ntransform = \"ties:embed_environ\"\n# Transform needed for environment variable substitution\n</code></pre>"},{"location":"examples/#common-pitfalls","title":"\ud83d\udea8 Common Pitfalls","text":""},{"location":"examples/#1-circular-dependencies","title":"1. Circular Dependencies","text":"<p>Avoid creating ties that reference each other:</p> <pre><code># \u274c Don't do this\n[[tool.ties.tie]]\nname = \"Circular 1\"\nsource = \"file1.txt\"\ntarget = \"file2.txt\"\n\n[[tool.ties.tie]]\nname = \"Circular 2\"\nsource = \"file2.txt\"\ntarget = \"file1.txt\"\n</code></pre>"},{"location":"examples/#2-missing-source-files","title":"2. Missing Source Files","text":"<p>Ensure source files exist before running Ties:</p> <pre><code># Check if source files exist\nls -la .gitignore config/app.toml\n\n# Then run Ties\nties check\n</code></pre>"},{"location":"examples/#3-insufficient-permissions","title":"3. Insufficient Permissions","text":"<p>Ensure you have write permissions to target directories:</p> <pre><code># Check permissions\nls -la target_directory/\n\n# Fix permissions if needed\nchmod 755 target_directory/\n</code></pre>"},{"location":"examples/#related-documentation","title":"\ud83d\udd17 Related Documentation","text":"<ul> <li>User Guide - Complete usage instructions</li> </ul> <p>Need more examples? Check our GitHub repository for additional examples and use cases.</p>"},{"location":"user-guide/","title":"Ties User Guide","text":"<p>This guide will walk you through using Ties to keep your repository files synchronized.</p>"},{"location":"user-guide/#what-is-ties","title":"\ud83c\udfaf What is Ties?","text":"<p>Ties is a command-line tool that automatically keeps files synchronized across your repository. It's particularly useful for:</p> <ul> <li>Keeping configuration files in sync across different   environments</li> <li>Maintaining consistent documentation across multiple   locations</li> <li>Automating file synchronization as part of your development workflow</li> <li>Applying transformations during file copying (e.g., embedding   environment variables)</li> </ul>"},{"location":"user-guide/#installation","title":"\ud83d\ude80 Installation","text":""},{"location":"user-guide/#from-pypi-recommended","title":"From PyPI (Recommended)","text":"<pre><code>pip install ties\n</code></pre>"},{"location":"user-guide/#with-yaml-support","title":"With YAML Support","text":"<pre><code>pip install ties[yaml]\n</code></pre>"},{"location":"user-guide/#from-source","title":"From Source","text":"<pre><code>git clone https://github.com/AlonKellner/ties.git\ncd ties\npip install -e .\n</code></pre>"},{"location":"user-guide/#configuration","title":"\u2699\ufe0f Configuration","text":"<p>Ties uses TOML configuration, typically placed in your <code>pyproject.toml</code> file or a separate <code>ties.toml</code> file.</p>"},{"location":"user-guide/#basic-configuration","title":"Basic Configuration","text":"<pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"gitignore sync\"\nsource = \".gitignore\"\ntarget = \"examples/.gitignore\"\n</code></pre>"},{"location":"user-guide/#advanced-configuration","title":"Advanced Configuration","text":"<pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Environment Config\"\nsource = \".ties/config.template\"\ntargets = [\".env.local\", \".env.production\"]\ntransform = \"ties:embed_environ\"\n\n[[tool.ties.tie]]\nname = \"Documentation Sync\"\nsource = \"README.md\"\ntarget = \"docs/README.md\"\ntransform = \"transform:markdown_cleanup\"\n</code></pre>"},{"location":"user-guide/#configuration-options","title":"\ud83d\udd27 Configuration Options","text":"<p>Each tie has the following options:</p> <ul> <li><code>name</code> (required): A descriptive name for the tie</li> <li><code>source</code> (required): The source file path</li> <li><code>target</code> or <code>targets</code>: Single target file or list of target files</li> <li><code>transform</code>: Optional transformation function to apply</li> </ul>"},{"location":"user-guide/#available-transforms","title":"Available Transforms","text":"<ul> <li><code>ties:embed_environ</code>: Embeds environment variables in target files</li> <li><code>transform:trivy_yaml</code>: Converts gitignore to Trivy YAML format   (requires local transform.py)</li> <li><code>transform:vscode_mcp_json</code>: Formats MCP JSON for VS Code   (requires local transform.py)</li> </ul>"},{"location":"user-guide/#usage","title":"\ud83d\udcd6 Usage","text":""},{"location":"user-guide/#basic-commands","title":"Basic Commands","text":"<pre><code># Check for discrepancies without making changes\nties check\n\n# Fix discrepancies automatically\nties fix\n</code></pre>"},{"location":"user-guide/#command-options","title":"Command Options","text":"<pre><code># Show help\nties --help\n\n# Check for discrepancies without making changes\nties check\n\n# Fix discrepancies automatically\nties fix\n</code></pre>"},{"location":"user-guide/#workflow-integration","title":"\ud83d\udd04 Workflow Integration","text":""},{"location":"user-guide/#pre-commit-integration","title":"Pre-commit Integration","text":"<p>Add Ties to your pre-commit configuration:</p> <pre><code>repos:\n  - repo: local\n    hooks:\n      - id: ties-check\n        name: Ties Check\n        entry: ties check\n        language: system\n        types: [python]\n</code></pre>"},{"location":"user-guide/#cicd-integration","title":"CI/CD Integration","text":"<p>Use Ties in your GitHub Actions workflow:</p> <pre><code>- name: Check file synchronization\n  run: ties check\n</code></pre>"},{"location":"user-guide/#file-patterns","title":"\ud83d\udcc1 File Patterns","text":""},{"location":"user-guide/#source-files","title":"Source Files","text":"<ul> <li>Can be any file type</li> <li>Supports relative and absolute paths</li> <li>Can use glob patterns for multiple files</li> </ul>"},{"location":"user-guide/#target-files","title":"Target Files","text":"<ul> <li>Can be single file or list of files</li> <li>Supports directory creation if needed</li> <li>Can use environment variable substitution</li> </ul>"},{"location":"user-guide/#transformations","title":"\ud83d\udd27 Transformations","text":""},{"location":"user-guide/#environment-variable-embedding","title":"Environment Variable Embedding","text":"<pre><code>[[tool.ties.tie]]\nname = \"Config with Environment\"\nsource = \"config.template\"\ntarget = \".env\"\ntransform = \"ties:embed_environ\"\n</code></pre> <p>This will replace <code>${env:ENV_VAR}</code> placeholders in your template with actual environment variable values.</p>"},{"location":"user-guide/#custom-transformations","title":"Custom Transformations","text":"<p>You can create custom transformation functions in Python:</p> <pre><code>def custom_transform(content: str, **kwargs) -&gt; str:\n    \"\"\"Custom transformation function.\"\"\"\n    # Your transformation logic here\n    return modified_content\n</code></pre>"},{"location":"user-guide/#troubleshooting","title":"\ud83d\udea8 Troubleshooting","text":""},{"location":"user-guide/#common-issues","title":"Common Issues","text":"<ol> <li>Configuration not found</li> <li>Ensure your <code>pyproject.toml</code> has a <code>[tool.ties]</code> section</li> <li> <p>Check file paths are correct</p> </li> <li> <p>Permission errors</p> </li> <li>Ensure you have write permissions to target directories</li> <li> <p>Check if files are read-only</p> </li> <li> <p>Transform errors</p> </li> <li>Verify transform function names are correct</li> <li>Check transform function dependencies</li> </ol>"},{"location":"user-guide/#examples","title":"\ud83d\udcda Examples","text":""},{"location":"user-guide/#example-1-sync-configuration-files","title":"Example 1: Sync Configuration Files","text":"<pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Config Sync\"\nsource = \"config/default.toml\"\ntargets = [\n    \"config/development.toml\",\n    \"config/staging.toml\",\n    \"config/production.toml\"\n]\n</code></pre>"},{"location":"user-guide/#example-2-documentation-synchronization","title":"Example 2: Documentation Synchronization","text":"<pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Docs Sync\"\nsource = \"README.md\"\ntarget = \"docs/README.md\"\n</code></pre>"},{"location":"user-guide/#example-3-environment-specific-files","title":"Example 3: Environment-Specific Files","text":"<pre><code>[tool.ties]\n[[tool.ties.tie]]\nname = \"Environment Configs\"\nsource = \".env.template\"\ntargets = [\".env.dev\", \".env.prod\"]\ntransform = \"ties:embed_environ\"\n</code></pre>"},{"location":"user-guide/#next-steps","title":"\ud83d\udd17 Next Steps","text":"<ul> <li>Check out Examples for more use cases</li> </ul> <p>Need help? Check our GitHub Issues.</p>"}]}